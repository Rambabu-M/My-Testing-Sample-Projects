{"failedCount":1,"prefixedPath":"src\/test\/java\/feature_files\/ach_out.feature","packageQualifiedName":"src.test.java.feature_files.ach_out","loopIndex":-1,"relativePath":"src\/test\/java\/feature_files\/ach_out.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> src\/test\/java\/feature_files\/ach_out.feature:6\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n116: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:32:17 Expected : but found referenceNumber\n        function referenceNumber(ref){\n                 ^\nUnnamed:37:8 Expected ) but found getTOTPCode\n        getTOTPCode: function(gauth) {\n        ^\nUnnamed:38:12 Invalid return statement\n            return ''+jutil.getTOTPCode(gauth);\n            ^\nUnnamed:39:8 Expected eof but found }\n        },\n        ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:401)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:141)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:137)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1344)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n\njs failed:\n>>>>\n01: function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n116: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:32:17 Expected : but found referenceNumber\n        function referenceNumber(ref){\n                 ^\nUnnamed:37:8 Expected ) but found getTOTPCode\n        getTOTPCode: function(gauth) {\n        ^\nUnnamed:38:12 Invalid return statement\n            return ''+jutil.getTOTPCode(gauth);\n            ^\nUnnamed:39:8 Expected eof but found }\n        },\n        ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:401)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:141)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:137)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1344)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1346)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:182)\n- java.base\/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\nsrc\/test\/java\/feature_files\/ach_out.feature:7","millis":0.0,"status":"failed"},"step":{"line":7,"prefix":"*","index":0,"text":"print plus_Url"},"stepLog":"13:04:01.876 src\/test\/java\/feature_files\/ach_out.feature:7\n* print plus_Url\n>> src\/test\/java\/feature_files\/ach_out.feature:6\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n116: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:32:17 Expected : but found referenceNumber\n        function referenceNumber(ref){\n                 ^\nUnnamed:37:8 Expected ) but found getTOTPCode\n        getTOTPCode: function(gauth) {\n        ^\nUnnamed:38:12 Invalid return statement\n            return ''+jutil.getTOTPCode(gauth);\n            ^\nUnnamed:39:8 Expected eof but found }\n        },\n        ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:401)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:141)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:137)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1344)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n\njs failed:\n>>>>\n01: function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n116: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:32:17 Expected : but found referenceNumber\n        function referenceNumber(ref){\n                 ^\nUnnamed:37:8 Expected ) but found getTOTPCode\n        getTOTPCode: function(gauth) {\n        ^\nUnnamed:38:12 Invalid return statement\n            return ''+jutil.getTOTPCode(gauth);\n            ^\nUnnamed:39:8 Expected eof but found }\n        },\n        ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:401)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:141)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:137)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1344)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1346)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:182)\n- java.base\/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\nsrc\/test\/java\/feature_files\/ach_out.feature:7\n"}],"line":6,"description":"","durationMillis":0.0,"failed":true,"error":">> src\/test\/java\/feature_files\/ach_out.feature:6\n>> karate-config.js failed\n>> js failed:\n>>>>\n01: (function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n116: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:32:17 Expected : but found referenceNumber\n        function referenceNumber(ref){\n                 ^\nUnnamed:37:8 Expected ) but found getTOTPCode\n        getTOTPCode: function(gauth) {\n        ^\nUnnamed:38:12 Invalid return statement\n            return ''+jutil.getTOTPCode(gauth);\n            ^\nUnnamed:39:8 Expected eof but found }\n        },\n        ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:401)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:141)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:137)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1344)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n\njs failed:\n>>>>\n01: function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n<<<<\ncom.intuit.karate.KarateException: js failed:\n>>>>\n01: (function fn() {\n02:     karate.log('config init....');\n03:     karate.configure('connectTimeout', 40000);\n04:     karate.configure('readTimeout', 40000);\n05:     var jutil = Java.type('SimpleRunner')\n06: \n07:     var mh = function (request) {\n08:         karate.log(user);\n09:         var sg = jutil.sign(request.bodyAsString, user.pk);\n10:         var hdrs = {\n11:             Authorization: 'Basic ' + jutil.btoa(user.user + ':' + user.password),\n12:             Signature: 'keyId=' + user.keyId + ',algorithm=ecdsa-sha256,signature=' + sg\n13:         }\n14: \n15:         return hdrs;\n16:     }\n17: \n18:     var ctr=jutil.seq();\n19: \n20:     karate.configure('headers', mh);\n21: \n22:     var config = {\n23:         baseUrl: 'http:\/\/nginxmaster\/PL\/rpc\/',\n24:         plus_Url:'https:\/\/connectors.cbwpayments.com\/PLMASTER',\n25:         bbaseUrl:'https:\/\/connectors.cbwpayments.com\/PL\/rpc\/',\n26:         gpsUrl:'https:\/\/connectors.cbwpayments.com\/gps\/rpc\/',\n27:         jutil: Java.type('SimpleRunner'),\n28:         seq: function() {                        \n29:             return ''+jutil.seq();\n30:         },\n31:         \n32:         function referenceNumber(ref){\n33:         var d=new Date();\n34:         return (ref+ +d.getFullYear()+''+(d.getMonth()+1)+''+d.getDate()+''+d.getMinutes()+''+d.getMilliseconds());\n35:         }\n36: \n37:         getTOTPCode: function(gauth) {\n38:             return ''+jutil.getTOTPCode(gauth);\n39:         },\n40: \n41:         Tokenstr: function(req,xml){\n42:             let str=''\n43:             var lines = xml.split(\"\\n\");\n44:             for (var line = 0; line < lines.length; line++) {\n45:             str += lines[line];\n46:             }\n47:             req.tokenFile=str\n48:             return req\n49:         },\n50: \n51:         signs: function(req,user){   \n52:             var signature = jutil.sign(JSON.stringify(req.params.payload), user.pk);       \n53:             req.api.signature = signature \n54:             return req\n55:         },\n56:     \n57:         defaults:{\n58:             program:\"100000000132001\",\n59:             product:\"PL\",\n60:             glasset:\"GL1661249528995\"\n61:         },\n62: \n63:         adminuser:{\n64:             user:\"g.naveenkumar+1@netsys-inc.com\",\n65:             password:\"Test@1234\",\n66:             keyId:\"2003\",\n67:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n68:         },\n69: \n70:         netsys : {\n71:             user: 'admin@netsys.org',\n72:             password: 'Test@1234',\n73:             keyId: '592',\n74:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgyGFy9Fdc2oEZpMfC\\nF+S6N0nLnu4o0jS0N6qRp+RafTuhRANCAASrV9YL2WW\/2Qzaq3DPxjP93xxuMMlB\\nBWtgoc+Pbs2f+rUCe+alrX+o97CdE17zR7HmZekqna0ylmUtyKaZ8tRg\\n-----END PRIVATE KEY-----',\n75:             pubk:'-----BEGIN PUBLIC KEY-----\\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEq1fWC9llv9kM2qtwz8Yz\/d8cbjDJ\\nQQVrYKHPj27Nn\/q1Anvmpa1\/qPewnRNe80ex5mXpKp2tMpZlLcimmfLUYA==\\n-----END PUBLIC KEY-----'\n76:         \n77:         },\n78: \n79:         legalrep:{\n80:             user: 'torreto@netxd.com',\n81:             password: 'Test@1234',\n82:             apikey:\"c5a158e75d3c4ab9943ad0b155d5ffd1\",\n83:             credientials:\"Basic dG9ycmV0b0BuZXR4ZC5jb206YzVhMTU4ZTc1ZDNjNGFiOTk0M2FkMGIxNTVkNWZmZDE=\",\n84:             pk: '-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5pfMF4E98GghSR5i\\ne2Hq9aRq5swOgGh3iRaQ+WfbNWWhRANCAAQ5Y6PqKD5P3AUHFNo9Qia29V0HFF7x\\nE39ezqDxVLQN6gmnM+VGoNSke7aL1iAXs+Nl\/0MxMGEpMsLEDQmpW5Dl\\n-----END PRIVATE KEY-----',      \n85:         },\n86: \n87:         Business_Cust:{\n88:             user: \"g.naveenkumar+501@bankcbw.org\",\n89:             password:\"Test@1234\",\n90:             id: '100000000000001',\n91:             id1: '100000000631310',\n92:             acc_no: '200583364057128',\n93:             acc_no1: '200688567322908',\n94:             sender : 'BH05QUJZ89749664699159',\n95:             to: 'BH25TZOD55564797476216',\n96:             keyId: '2004',\n97:             legalrepid: '4006',\n98:             SSN: '201480995',\n99:             phone: '1245011201',\n100:             email: 'g.naveenkumar+1001@netsys-inc.com',\n101:             key: '1003',\n102:             lemail:'g.naveenkumar+101@bankcbw.org',\n103:             lphone:'75586908',\n104:             lkey:'1635333703',\n105:             lCR:'661434556',\n106:             semail:'g.naveenkumar+2001@bankcbw.org',\n107:             sphone:'56895132',\n108:             scpr:'622345452',\n109:             skey:'1635419237',\n110:             sid:'11001'\n111:         }\n112:     }\n113:     return config;\n114:     \n115: }\n116: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:32:17 Expected : but found referenceNumber\n        function referenceNumber(ref){\n                 ^\nUnnamed:37:8 Expected ) but found getTOTPCode\n        getTOTPCode: function(gauth) {\n        ^\nUnnamed:38:12 Invalid return statement\n            return ''+jutil.getTOTPCode(gauth);\n            ^\nUnnamed:39:8 Expected eof but found }\n        },\n        ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:401)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:141)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:137)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1344)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:233)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1346)\n- com.intuit.karate.core.ScenarioRuntime.evalConfigJs(ScenarioRuntime.java:313)\n- com.intuit.karate.core.ScenarioRuntime.beforeRun(ScenarioRuntime.java:398)\n- com.intuit.karate.core.ScenarioRuntime.run(ScenarioRuntime.java:430)\n- com.intuit.karate.core.FeatureRuntime.processScenario(FeatureRuntime.java:182)\n- java.base\/java.util.Iterator.forEachRemaining(Iterator.java:133)\n\nsrc\/test\/java\/feature_files\/ach_out.feature:7","executorName":"main","name":"print PLUS url","startTime":1668756841802,"refId":"[1:6]","endTime":1668756841876,"exampleIndex":-1}],"callDepth":0,"name":"Ach Out","description":"","resultDate":"2022-11-18 01:04:01 PM","durationMillis":0.0,"passedCount":0}